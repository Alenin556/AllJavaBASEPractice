plugins {
    id 'java'
    id "io.qameta.allure" version "2.11.2"
//    id 'org.gradle.test-retry' version '1.0.0'
}

sourceCompatibility = "11"
targetCompatibility = "11"


repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.rest-assured:rest-assured:5.3.0'
    implementation 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
    implementation 'io.qameta.allure:allure-selenide:2.21.0'
    implementation 'io.qameta.allure:allure-rest-assured:2.21.0'
    implementation 'in.yajnesh.util:java-util:1.0.0'
    testImplementation 'com.codeborne:selenide:6.15.0'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    implementation 'com.codeborne:selenide:6.15.0'
    implementation 'org.projectlombok:lombok:1.18.26'
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
    implementation 'org.slf4j:slf4j-log4j12:2.0.6'
    implementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.junit-pioneer:junit-pioneer:2.0.1'
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

task runTaskExample {
    println 'Task is finished'
}

test {
    useJUnitPlatform()
}
